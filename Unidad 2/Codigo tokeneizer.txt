import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.StringTokenizer;
        
public class ExcepcionArchivo {
private String rutaArchivo;
private String linea;
 public static boolean isNumero(String numero){
        double num;
         try{
             num = Double.parseDouble(numero);
         }
         catch(Exception e){
             return(false);
         }
             return(true);
    }
    
    public static boolean isOperador(String operador,String[] operadores){
        for(int i=0;i<4;i++){
            if(operadores[i].equals(operador)){
                return true;
            }
        }      
        return false;     
    }  
    public static boolean isPuntuacion(String punt,String[] signosDePuntuacion){
        for(int i=0;i<7;i++){
            if(signosDePuntuacion[i].equals(punt)){
                return true;
            }
        }       
        return false;
    }
    
String Op[]={
    "/","*","-","+"
} ;
private String id[]={
    "01","operador","02","p_reservada",
                                    "03","numero",
                                    "04","espacio en blanco",
                                    "05","identificador",
                                    "06","puntuacion"
};

private String reservadas[]={
   "if","while","public","for","private","main","int","float",
                                        "double","String"
};
private String signospuntuacion[]={
        ";",".",",","(",")","[","]"
};
public ExcepcionArchivo(){
this.rutaArchivo="C:\\Users\\ITNL\\Desktop\\hola.txt";
}

public void leerArchivo(){
try{
FileReader fr=new FileReader(rutaArchivo);
BufferedReader br=new BufferedReader(fr);
String linea;
String token;
ArrayList<String> tokens = new ArrayList<>();

while ((linea = br.readLine()) != null) {
    StringTokenizer st = new StringTokenizer(linea,";/./¿/?",true);
    while(st.hasMoreTokens()){
        token = st.nextToken();
        tokens.add(token);
    }
}
}catch(IOException ex){
    
System.out.println("Error en la apertura del archivo "+ex.toString());

}

}
public static void main(String[] args) 
{
ExcepcionArchivo ea=new ExcepcionArchivo();
ea.leerArchivo();
 String[] operadores = {"+","-","*","/"};
       String[] palabrasReservadas = {"if","while","public","for","private","main","int","float",
                                        "double","String"};
       String[] signosDePuntuacion = {";",".",",","(",")","[","]"};
       String[][] Identificadores = {{"01","operador"},
                                    {"02","p_reservada"},
                                    {"03","numero"},
                                    {"04","espacio en blanco"},
                                    {"05","identificador"},
                                    {"06","puntuacion"}};                                  
       isPuntuacion("",signosDePuntuacion);
       isOperador("",operadores);
       isNumero("");
}

  

}
